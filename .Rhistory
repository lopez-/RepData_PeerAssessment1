setwd("c:/Users/Victor/Desktop/Quizz 3")
domestic <- read.csv("domestic.csv", colClasses="character",skip=5, header=FALSE)[,c(1,2,4,5)]
names(domestic) <- c("CountryID","Ranking","Economy","GDP")
domestic <- domestic[domestic[,2]!="",]
domestic <- domestic[domestic[,1]!="",]
domestic$GDP <- as.numeric(gsub(",","",domestic$GDP))
domestic[,2] <- as.numeric(domestic[,2])
library(dplyr)
domestic <- tbl_df(domestic)
eds <- read.csv("getdata-data-EDSTATS_Country.csv",header=TRUE)
names(eds)[1] <- "CountryID"
mrgd <- merge(domestic, eds, by="CountryID")
mrgd <- tbl_df(mrgd)
domestic <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", colClasses="character",skip=5, header=FALSE)[,c(1,2,4,5)]
names(domestic) <- c("CountryID","Ranking","Economy","GDP")
domestic <- domestic[domestic[,2]!="",]
domestic <- domestic[domestic[,1]!="",]
domestic$GDP <- as.numeric(gsub(",","",domestic$GDP))
domestic[,2] <- as.numeric(domestic[,2])
library(dplyr)
domestic <- tbl_df(domestic)
mean(domestic$GDP)
grep("^United",countryNames), 3
grep("^United",countryNames)
eds <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv",header=TRUE)
domestic
eds <- tbl_df(eds)
eds
names(eds)[1] <- "CountryID"
eds
mrgd <- merge(domestic, eds, by="CountryID")
mrgd <- tbl_df(mrgd)
mrgd
names(mrgd)
mrgd[,10]
merged[,1:5]
mrgd[,1:5]
mrgd[,6:10]
mrgd[,11:15]
View(mrgd)
names(mrgd)
?grep
grep("End",mrgd[,13],value=TRUE)
head(mrgd[,13])
grep("Fiscal",mrgd[,13],value=TRUE)
grep("Fiscal year end: June",mrgd[,13],value=TRUE)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
class(sampleTimes)
length(sampleTimes)
grep("^2012",sampleTimes)
length(grep("^2012",sampleTimes))
format(sampleTimes, %a %Y)
formatDate <- format(sampleTimes, "%a %Y")
formatDate
grep("^lu. 2012",formatDate)
length(grep("^lu. 2012",formatDate))
x <- rnorm(100)
hist(x)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?panel.lmline()
?par()
trellis.par.set()
?trellis.par.set()
?splom()
?print.trellis()
library(datasets)
data(airquality)
qplot(Wind,Ozone,data=airquality,facets=.~facets=.~(Month))
qplot(Wind,Ozone,data=airquality,facets=.~factor(Month))
library(ggplot2)
qplot(Wind,Ozone,data=airquality,facets=.~factor(Month))
airquality=transform(airquality,Month=factor(Month))
qplot(Wind,Ozone,data=airquality,facets=.~Month)
sex <- c("male","male","male","male","female","female","female","female","female","female","female","female","female")
sex <- as.factor(sex)
sex
levels(sex)
levs <- levels(sex)
name <- "Katja"
name
length(name)
char(name)
substr(name)
?substr
substr(name,1,3)
?nchar
nchar(name)
name <- "Katja"
length <- nchar(name)
length
name[1]
name[1:3]
name[[1]]
name(1)
name[1][1]
name[1][[1]]
name[[[1]]]
start <- substr(name,1,2)
end <- substr(name,(length - 1),length)
start
end
?concat
?conc
??concatenat
c(start,end)
paste(start,end,sep="")
start <- paste("*",substr(name,1,2),sep="")
end <- paste(substr(name,(length - 1),length),"*",sep="")
start
end
for (i in 1:length){
substr(name,i,(i+2))
}
for (i in 1:length){
print(substr(name,i,(i+2)))
}
for (i in 1:(length-2){
print(substr(name,i,(i+2)))
}
for (i in 1:(length-2){
print(substr(name,i,(i+2)))
}
for (i in 1:(3){
print(substr(name,i,(i+2)))
}
for (i in 1:(length-2)){
print(substr(name,i,(i+2)))
}
name <- "Victor"
# take lenght
length <- nchar(name)
# state the special start & end of the names
start <- paste("*",substr(name,1,2),sep="")
end <- paste(substr(name,(length - 1),length),"*",sep="")
# do middle trigrams
for (i in 1:(length-2)){
print(substr(name,i,(i+2)))
}
v1 <- c("a","b")
v1 <- c(v1,"c")
v1
v2 <- c()
v2
v2 <- c(v2,"a")
v2
middle <- c()
for (i in 1:(length-2)){
temp <- substr(name,i,(i+2))
middle <- c(middle,temp)
}
temp
middle
output <- c(start,middle,end)
output
# record name
name <- "Katja Dressler"
# take lenght
length <- nchar(name)
# state the special start & end of the names
start <- paste("*",substr(name,1,2),sep="")
end <- paste(substr(name,(length - 1),length),"*",sep="")
# do middle trigrams
middle <- c()
for (i in 1:(length-2)){
temp <- substr(name,i,(i+2))
middle <- c(middle,temp)
}
# put everything together
output <- c(start,middle,end)
# record name
name <- "Katja Dressler"
# take lenght
length <- nchar(name)
# state the special start & end of the names
start <- paste("*",substr(name,1,2),sep="")
end <- paste(substr(name,(length - 1),length),"*",sep="")
# do middle trigrams
middle <- c()
for (i in 1:(length-2)){
temp <- substr(name,i,(i+2))
middle <- c(middle,temp)
}
# put everything together
output <- c(start,middle,end)
print(output)
# record name
name <- "Victor Lopez Selva"
# take lenght
length <- nchar(name)
# state the special start & end of the names
start <- paste("*",substr(name,1,2),sep="")
end <- paste(substr(name,(length - 1),length),"*",sep="")
# do middle trigrams
middle <- c()
for (i in 1:(length-2)){
temp <- substr(name,i,(i+2))
middle <- c(middle,temp)
}
# put everything together
output <- c(start,middle,end)
print(output)
# record name
names <- c("Katja Dressler","Victor Lopez Selva")
length(names)
for (i in 1:length(names)){
print(i)
}
output <- paste(c(start,middle,end),sep=","
print(output)
# put everything together
output <- paste(c(start,middle,end),sep=",")
print(output)
output <- paste(start,middle, end, sep=",")
print(output)
# put everything together
all <- c(start,middle,end)
output <- paste(all,sep",")
# put everything together
all <- c(start,middle,end)
output <- paste(all,sep=",")
output
class(all)
all
# put everything together
all <- c(start,middle,end)
output <- paste(all,collapse=",")
print(output)
trigrams <- data.frame()
# record name
names <- c("Katja Dressler","Victor Lopez Selva")
trigrams <- data.frame()
for (i in 1:length(names)){
trigrams <- cbind(names[i])
}
trigrams
# record name
names <- c("Katja Dressler","Victor Lopez Selva")
trigrams <- data.frame()
for (i in 1:length(names)){
trigrams <- cbind(trigrams,names[i])
}
# record name
names <- c("Katja Dressler","Victor Lopez Selva")
trigrams <- data.frame()
for (i in 1:length(names)){
trigrams <- cbind(trigrams,names[i])
}
?data.frame
# record name
names <- c("Katja Dressler","Victor Lopez Selva")
trigrams <- data.frame("names")
trirams
trigrams
# record name
names <- c("Katja Dressler","Victor Lopez Selva")
trigrams <- data.frame()
# record name
names <- c("Katja Dressler","Victor Lopez Selva")
trigrams <- c()
for (i in 1:length(names)){
trigrams <- c(trigrams,names[i])
}
trigrams
length <- nchar(names[i])
names[i]
length <- nchar(names[i])
length
length <- nchar(names[2])
length
length <- nchar(names[1])
length
# record name
names <- c("Katja Dressler","Victor Lopez Selva")
trigrams <- c()
for (i in 1:length(names)){
# take lenght
length <- nchar(names[i])
# state the special start & end of the names
start <- paste("*",substr(names[i],1,2),sep="")
end <- paste(substr(names[i],(length - 1),length),"*",sep="")
# do middle trigrams
middle <- c()
for (j in 1:(length-2)){
temp <- substr(names[i],j,(j+2))
middle <- c(middle,temp)
}
# put everything together
all <- c(start,middle,end)
output <- paste(all,collapse=",")
# add it to trigrams
trigrams <- c(output,names[i])
}
trigrams
# record name
names <- c("Katja Dressler","Victor Lopez Selva")
trigrams <- c()
for (i in 1:length(names)){
# take lenght
length <- nchar(names[i])
# state the special start & end of the names
start <- paste("*",substr(names[i],1,2),sep="")
end <- paste(substr(names[i],(length - 1),length),"*",sep="")
# do middle trigrams
middle <- c()
for (j in 1:(length-2)){
temp <- substr(names[i],j,(j+2))
middle <- c(middle,temp)
}
# put everything together
all <- c(start,middle,end)
output <- paste(all,collapse=",")
# add it to trigrams
trigrams <- c(trigrams,output)
}
trigrams
length(trigrams)
# read Excel with names
library(xlsxjars)
library(rJava)
library(xlsx)
excel <- read.xlsx("C:/Users/Victor/Dropbox/Microsoft/Project Names Paul",sheetIndex=1)
excel <- read.xlsx("C:/Users/Victor/Dropbox/Microsoft/Project Names Paul/training.xlsx",sheetIndex=1,colIndex=1)
head(excel)
excel[1]
excel[1,]
str(excel)
?read.xlsx
excel <- read.xlsx("C:/Users/Victor/Dropbox/Microsoft/Project Names Paul/training.xlsx",sheetIndex=1,colIndex=1,stringsAsFactors=F)
excel
excel[1,]
excel[251,]
# read Excel with names
library(xlsxjars)
library(rJava)
library(xlsx)
excel <- read.xlsx("C:/Users/Victor/Dropbox/Microsoft/Project Names Paul/training.xlsx",sheetIndex=1,colIndex=1,stringsAsFactors=F)
# create a vector to store trigrams for all names
trigrams <- c()
for (i in 1:length(excel)){
# take lenght
length <- nchar(excel[i])
# state the special start & end of the names
start <- paste("*",substr(excel[i],1,2),sep="")
end <- paste(substr(excel[i],(length - 1),length),"*",sep="")
# do middle trigrams
middle <- c()
for (j in 1:(length-2)){
temp <- substr(excel[i],j,(j+2))
middle <- c(middle,temp)
}
# put everything together
trigram <- c(start,middle,end)
trigramCommaSep <- paste(trigram,collapse=",")
# add it to trigrams
trigrams <- c(trigrams,trigramCommaSep)
}
str(trigrams)
trigrams
head(trigrams)
length <- nchar(excel[i,])
length
length(excel)
nrow(excel)
# read Excel with names
library(xlsxjars)
library(rJava)
library(xlsx)
excel <- read.xlsx("C:/Users/Victor/Dropbox/Microsoft/Project Names Paul/training.xlsx",sheetIndex=1,colIndex=1,stringsAsFactors=F)
# create a vector to store trigrams for all names
trigrams <- c()
for (i in 1:nrow(excel)){
# take lenght
length <- nchar(excel[i,])
# state the special start & end of the names
start <- paste("*",substr(excel[i,],1,2),sep="")
end <- paste(substr(excel[i,],(length - 1),length),"*",sep="")
# do middle trigrams
middle <- c()
for (j in 1:(length-2)){
temp <- substr(excel[i,],j,(j+2))
middle <- c(middle,temp)
}
# put everything together
trigram <- c(start,middle,end)
trigramCommaSep <- paste(trigram,collapse=",")
# add it to trigrams
trigrams <- c(trigrams,trigramCommaSep)
}
head(trigrams)
trigrams[1]
write.table(trigrams, "./trigrams.txt", sep="\t")
getwd()
?write.table
write.table(trigrams, "C:/Users/Victor/Dropbox/Microsoft/Project Names Paul/trigrams.txt", sep="\t",quote=F,row.names=F,col.names=F)
library(knitr)
library(knitr)
setwd("C:/Users/Victor/Desktop/coursera/RepData_PeerAssessment1")
Sys.setlocale("LC_TIME", "English")
library(ggplot2)
library(knitr)
dir()
?knit2html
setwd("C:/Users/Victor/Desktop/coursera/RepData_PeerAssessment1")
Sys.setlocale("LC_TIME", "English")
library(ggplot2)
activity <- read.csv("./activity.csv",stringsAsFactors=F)
activity$date <- as.Date(activity$date)
# Q1
dailyStep <- aggregate(steps ~ date, activity, sum, na.rm=T)
plot(dailyStep,type="h")
mean(dailyStep$steps)
median(dailyStep$steps)
# Q2
averageInterval <- aggregate(steps ~ interval, activity, mean, na.rm=T)
plot(averageInterval,type="l",main="Avg Steps Taken on Each Interval")
averageInterval[averageInterval$steps==max(averageInterval$steps),1] # interval 835
# Q3
sum(is.na(activity$steps)) # 2304
sum(is.na(activity$date)) # 0
sum(is.na(activity$interval))   # 0 => now we know there is only missing
# values on "steps" data
activityFilled <- activity
for(i in 1:nrow(activityFilled)){
if(is.na(activityFilled$steps[i])){
tempInterval <- activityFilled[i,3] # 3 being "interval"
activityFilled$steps[i] <- averageInterval$steps[averageInterval$interval==tempInterval]
}
}
dailyStepFilled <- aggregate(steps ~ date, activityFilled, sum, na.rm=T)
plot(dailyStepFilled,type="h")
mean(dailyStepFilled$steps)
median(dailyStepFilled$steps)
# Q4
day <- weekdays(activityFilled$date)
weekday <- c()
for (i in 1:length(day)){
if(day[i]=="Saturday" | day[i]=="Sunday"){
weekday <- c(weekday,"weekend")
} else {
weekday <- c(weekday,"weekday")
}
}
weekday <- as.factor(weekday)
activityFilled <- cbind(activityFilled,weekday)
averageWeekday <- aggregate(steps ~ interval, activity[weekday=="weekday",], mean)
averageWeekday$weekday="weekday"
averageWeekend <- aggregate(steps ~ interval, activity[weekday=="weekend",], mean)
averageWeekend$weekday="weekend"
averaged <- averageWeekday
averaged <- rbind(averaged,averageWeekend)
qplot(interval,steps,data=averaged,color=weekday,facets=weekday~.) + geom_line()
